/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.rest.kn.ui;

import java.util.Date;
import java.util.List;
import java.util.Optional;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.rest.kn.model.Category;
import com.rest.kn.model.Product;
import com.rest.kn.model.Supplier;
import com.rest.kn.service.InventoryManagementUtility;

/**
 *
 * @author 91790
 */
@Component
public class ManageProduct extends javax.swing.JFrame {

	/**
	 * Creates new form ManageProduct
	 */
	@Autowired
	InventoryManagementUtility inventoryManagementUtility;
	private int productId;

	public ManageProduct() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		comboGSTRate = new javax.swing.JComboBox<>();
		jLabel2 = new javax.swing.JLabel();
		txtDesc = new javax.swing.JTextField();
		txtQty = new javax.swing.JTextField();
		comboCategory = new javax.swing.JComboBox<>();
		comboSupplier = new javax.swing.JComboBox<>();
		jLabel3 = new javax.swing.JLabel();
		txtSellingPrice = new javax.swing.JTextField();
		txtProductId = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		jLabel9 = new javax.swing.JLabel();
		txtName = new javax.swing.JTextField();
		txtCostPrice = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		jLabel10 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tableProduct = new javax.swing.JTable();
		jPanel3 = new javax.swing.JPanel();
		btnClose = new javax.swing.JButton();
		btnSearch = new javax.swing.JButton();
		btnUpdate = new javax.swing.JButton();
		btnSave = new javax.swing.JButton();
		btnReset = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		addComponentListener(new java.awt.event.ComponentAdapter() {
			public void componentShown(java.awt.event.ComponentEvent evt) {
				formComponentShown(evt);
			}
		});

		jPanel1.setBackground(new java.awt.Color(255, 204, 0));

		jLabel1.setBackground(new java.awt.Color(255, 204, 0));
		jLabel1.setFont(new java.awt.Font("Impact", 1, 36)); // NOI18N
		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel1.setText("Manage Product");

		jPanel2.setBackground(new java.awt.Color(255, 204, 0));

		comboGSTRate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1%", "5%", "12%", "18%", "28%" }));
		comboGSTRate.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				comboGSTRateActionPerformed(evt);
			}
		});

		jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel2.setText("Product Id");

		comboCategory.setModel(
				new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

		comboSupplier.setModel(
				new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

		jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel3.setText("Product Name");

		txtSellingPrice.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtSellingPriceActionPerformed(evt);
			}
		});

		jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel4.setText("Description");

		jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel9.setText("Supplier Details");

		jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel5.setText("Quantity");

		jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel6.setText("Selling Price");

		jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel7.setText("Cost Price");

		jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel8.setText("GST Rate");

		jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel10.setText("Category Details");

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(txtProductId, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(txtName))
						.addGap(18, 18, 18)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(txtDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
								.addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGap(18, 18, 18)
						.addGroup(
								jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(txtQty)
												.addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 94,
														javax.swing.GroupLayout.PREFERRED_SIZE))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addGroup(jPanel2Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(txtSellingPrice).addComponent(jLabel6,
																javax.swing.GroupLayout.PREFERRED_SIZE, 137,
																javax.swing.GroupLayout.PREFERRED_SIZE))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addGroup(jPanel2Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(txtCostPrice).addComponent(jLabel7,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
												.addGap(18, 18, 18)
												.addGroup(jPanel2Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(comboGSTRate,
																javax.swing.GroupLayout.PREFERRED_SIZE, 75,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE,
																75, javax.swing.GroupLayout.PREFERRED_SIZE)))
										.addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 114,
												javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(comboCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(comboSupplier, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 270,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap()));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addGroup(jPanel2Layout.createSequentialGroup()
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jLabel10))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(txtProductId).addComponent(txtName).addComponent(txtDesc)
										.addComponent(comboCategory).addComponent(comboGSTRate)))
						.addGroup(jPanel2Layout.createSequentialGroup()
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jLabel6).addComponent(jLabel7,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(txtSellingPrice).addComponent(txtCostPrice)
										.addComponent(txtQty))))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel9).addComponent(comboSupplier))
						.addGap(8, 8, 8)));

		tableProduct.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Product Id", "Name", "Description", "Quantity", "Selling Price", "Cost Price", "GST Rate",
				"Category Details", "Supplier Details" }));
		tableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tableProductMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(tableProduct);
		if (tableProduct.getColumnModel().getColumnCount() > 0) {
			tableProduct.getColumnModel().getColumn(0).setPreferredWidth(20);
			tableProduct.getColumnModel().getColumn(1).setPreferredWidth(100);
			tableProduct.getColumnModel().getColumn(2).setPreferredWidth(250);
			tableProduct.getColumnModel().getColumn(3).setPreferredWidth(20);
			tableProduct.getColumnModel().getColumn(4).setPreferredWidth(50);
			tableProduct.getColumnModel().getColumn(5).setPreferredWidth(50);
			tableProduct.getColumnModel().getColumn(7).setPreferredWidth(200);
			tableProduct.getColumnModel().getColumn(8).setPreferredWidth(200);
		}

		jPanel3.setBackground(new java.awt.Color(255, 204, 0));

		btnClose.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		btnClose.setText("Close");
		btnClose.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCloseActionPerformed(evt);
			}
		});

		btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		btnSearch.setText("Search");
		btnSearch.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSearchActionPerformed(evt);
			}
		});

		btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		btnUpdate.setText("Update");
		btnUpdate.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnUpdateActionPerformed(evt);
			}
		});

		btnSave.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		btnSave.setText("Save");
		btnSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSaveActionPerformed(evt);
			}
		});

		btnReset.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
		btnReset.setText("Reset");
		btnReset.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnResetActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addComponent(btnSearch)
						.addGap(89, 89, 89).addComponent(btnSave).addGap(103, 103, 103).addComponent(btnUpdate)
						.addGap(99, 99, 99).addComponent(btnReset).addGap(94, 94, 94).addComponent(btnClose)
						.addContainerGap()));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btnSearch).addComponent(btnSave).addComponent(btnUpdate)
								.addComponent(btnReset).addComponent(btnClose))
						.addContainerGap()));

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane1)
								.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jPanel2,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)))
						.addContainerGap())
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(362, 362, 362)
						.addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGap(313, 313, 313))
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1)
								.addGap(18, 18, 18)
								.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
								.addGap(18, 18, 18)
								.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(9, 9, 9)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void comboGSTRateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_comboGSTRateActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_comboGSTRateActionPerformed

	private void txtSellingPriceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtSellingPriceActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtSellingPriceActionPerformed

	private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSearchActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_btnSearchActionPerformed

	private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSaveActionPerformed
		try {

			String result = inventoryManagementUtility.validateFields("save",txtProductId.getText(), txtName.getText(),
					txtDesc.getText(), txtQty.getText(), txtSellingPrice.getText(), txtCostPrice.getText());
			if (result == null) {
				Product product = new Product();
				product.setProductId(Integer.parseInt(txtProductId.getText()));
				product.setProductName(txtName.getText());
				product.setDescription(txtDesc.getText());
				product.setQuantity(Integer.parseInt(txtQty.getText()));
				product.setSellingPrice(Double.parseDouble(txtSellingPrice.getText()));
				product.setCostPrice(Double.parseDouble(txtCostPrice.getText()));
				product.setGstRate(Integer.parseInt(comboGSTRate.getSelectedItem().toString().split("%")[0]));
				product.setCreatedBy("admin");
				product.setCreatedOn(new Date());
				if (comboCategory.getSelectedIndex()>0) {
					Optional<Category> category=inventoryManagementUtility.getCategoryDetails(Integer.parseInt(comboCategory.getSelectedItem().toString().split("-")[0]));
					if (category.isPresent()) {
						product.setCategory(category.get());
					} else {
						JOptionPane.showMessageDialog(null, "Category detail not available in database.");
					}
				}
				if (comboSupplier.getSelectedIndex()>0) {
					
					Optional<Supplier> supplier=inventoryManagementUtility.getSupplierDetails(Integer.parseInt(comboSupplier.getSelectedItem().toString().split("-")[0]));
					if (supplier.isPresent()) {
						product.setSupplier(supplier.get());
					} else {
						JOptionPane.showMessageDialog(null, "Supplier detail not available in database.");
					}
				}
				inventoryManagementUtility.saveProduct(product);
				JOptionPane.showMessageDialog(null, "Product saved successfully!");
				populateProductTable();
			} else {
				if (result.equals("Quantity must be number")) {
					txtQty.setText("");
					return;
				}
				JOptionPane.showMessageDialog(null, result);
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
		clearAllFields();
	}// GEN-LAST:event_btnSaveActionPerformed

	private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnUpdateActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_btnUpdateActionPerformed

	private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnResetActionPerformed
		clearAllFields();
	}// GEN-LAST:event_btnResetActionPerformed

	private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCloseActionPerformed
		this.dispose();
	}// GEN-LAST:event_btnCloseActionPerformed

	private void formComponentShown(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_formComponentShown
		populateProductTable();
		preloadCategoryDropdown();
		preloadSupplierDropdown();
		clearAllFields();
	}// GEN-LAST:event_formComponentShown

	private void tableProductMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tableProductMouseClicked
		clearAllFields();
		DefaultTableModel model = (DefaultTableModel) tableProduct.getModel();
		int index = tableProduct.getSelectedRow();
		productId = Integer.parseInt(model.getValueAt(index, 0).toString());
		txtProductId.setText(model.getValueAt(index, 0).toString());
		txtName.setText(model.getValueAt(index, 1).toString());
		txtDesc.setText(model.getValueAt(index, 2).toString());
		txtQty.setText(model.getValueAt(index, 3).toString());
		txtSellingPrice.setText(model.getValueAt(index, 4).toString());
		txtCostPrice.setText(model.getValueAt(index, 5).toString());

		comboGSTRate.setSelectedItem(model.getValueAt(index, 6) + "%");
		if (model.getValueAt(index, 7) != null && model.getValueAt(index, 7).toString() != null) {
			comboCategory.setSelectedItem(model.getValueAt(index, 7).toString());
		}
		if (model.getValueAt(index, 8) != null && model.getValueAt(index, 8).toString() != null) {
			comboSupplier.setSelectedItem(model.getValueAt(index, 8).toString());
		}

		btnSave.setEnabled(false);
		btnSearch.setEnabled(false);
		btnUpdate.setEnabled(true);
	}// GEN-LAST:event_tableProductMouseClicked

	private void populateProductTable() {
		DefaultTableModel model = (DefaultTableModel) tableProduct.getModel();
		model.setRowCount(0);

		try {
			List<Product> productList = inventoryManagementUtility.preloadProductTable();

			for (Product product : productList) {
				String category = null;
				String supplier = null;
				if (product.getCategory() != null && product.getCategory().getId() > 0
						&& StringUtils.isNotBlank(product.getCategory().getCategoryName())) {
					category = product.getCategory().getId() + "-" + product.getCategory().getCategoryName();
				}
				if (product.getSupplier() != null && product.getSupplier().getId() > 0
						&& StringUtils.isNotBlank(product.getSupplier().getCompanyname())) {
					supplier = product.getSupplier().getId() + "-" + product.getSupplier().getCompanyname();
				}
				model.addRow(new Object[] { product.getProductId(), product.getProductName(), product.getDescription(),
						product.getQuantity(), product.getSellingPrice(), product.getCostPrice(), product.getGstRate(),
						category, supplier });
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
		model.fireTableDataChanged();
		clearAllFields();
	}

	private void preloadCategoryDropdown() {
		try {
			List<Category> categoryList = inventoryManagementUtility.preloadCategoryTable();
			comboCategory.removeAllItems();
			comboCategory.addItem("");
			for (Category category : categoryList) {
				comboCategory.addItem(category.getId() + "-" + category.getCategoryName());
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
	}

	private void preloadSupplierDropdown() {
		try {
			List<Supplier> supplierList = inventoryManagementUtility.preloadSupplierTable();
			comboSupplier.removeAllItems();
			comboSupplier.addItem("");
			for (Supplier supplier : supplierList) {
				comboSupplier.addItem(supplier.getId() + "-" + supplier.getCompanyname());
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
	}

	private void clearAllFields() {
		// TODO Auto-generated method stub
		txtProductId.setText("");
		txtName.setText("");
		txtDesc.setText("");
		txtSellingPrice.setText("");
		txtQty.setText("");
		txtCostPrice.setText("");
		comboGSTRate.setSelectedIndex(0);
		comboCategory.setSelectedIndex(0);
		comboSupplier.setSelectedIndex(0);
		btnSave.setEnabled(true);
		btnSearch.setEnabled(true);
		btnUpdate.setEnabled(false);
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ManageProduct().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnClose;
	private javax.swing.JButton btnReset;
	private javax.swing.JButton btnSave;
	private javax.swing.JButton btnSearch;
	private javax.swing.JButton btnUpdate;
	private javax.swing.JComboBox<String> comboCategory;
	private javax.swing.JComboBox<String> comboGSTRate;
	private javax.swing.JComboBox<String> comboSupplier;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable tableProduct;
	private javax.swing.JTextField txtCostPrice;
	private javax.swing.JTextField txtDesc;
	private javax.swing.JTextField txtName;
	private javax.swing.JTextField txtProductId;
	private javax.swing.JTextField txtQty;
	private javax.swing.JTextField txtSellingPrice;
	// End of variables declaration//GEN-END:variables
}
